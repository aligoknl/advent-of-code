const list1 = [
n,
];

const list2 = [
  69190101002388020193228696330494187586376417160721966012204318843267037766025811777144227210206417991637272750747637085269360615381240783148601141728515490642506235059270983323689265743880637537045304572401240777179158975304857022633041884392635830849195138797834525228594774712962670388200864604915898268188432549038797188438207038797418127067838797481874132045304458971154125229220995822538767188431295195492491585172222099124227479084827784557770181712124076641015107664104605577137201938820022043181793934920193587682019339286220996330438797582256641088200704224227299825288343466218843983322256120234937132680787448897398506314538942754782339508664102019311494967783770288200119249483754177984968730297013800195753026703353866749521384967029586528937395715744230881282589528844266874802814046388948379833268164967029521918544208658820023173313166248758042692711240717190938225443242272813795123671276601209826820527412167290413047438822670349158231546330471972615715023312407860536330415714246471949387440581323286720865776608565421172614029409826703220994866794134630577877798332723478141270317664104078998292148719655828140220435315712129242046430025037666035822577660183733076366410208652954698726962331588095865201939483746051752255196955151267033823934662220435678938797188437766018843977249521920865188431001920793582251935434823740253324135346865893060612648882002209969145220992814056224238473697338797656543879717004866711410520193427904448168049387978005398332374373536725033533462240236218241341927826194630962086592635220998019049158950873851432453442662224599819311862086545655948372326134823239304263063300751109263517721633042670398268331958209795219124072019375961602442086526703652326330414842491581253844266145825566388200983329826890620926354530466976852148171259006884414915898332387978171222099124076641070015817128236454735576169826814037983329263522099220994530438797453042019326194141706778535386471528017312407817499953855419664106437885728664109087843398862654817081714610005822526703368803622467451353867755290626928047676498147456419521954733965584155796558904084514525188263749906849158948056068286476267031236059266491589263544794664104530488200319559913396702628112051056902164745933566410882001245842272453044710494837868304915812827582259263546506261946641012242952191493849158353861974955345188437351998499948379826845070335325755696702349032225555676359671312366227682609670235963897368950977660488751064598332465882019396702439401465798332139559833274666575162086534662123689701337043958659067195865872799701312577348232209973260420234870077660781099670253373828099746269447449321441320865124071240773168784174153112407124074200740303810556824358225272114091456083784529521934424932423453326700952194226942787760033879758614808575345498332810088205612852453289655878324962045862124776313899833295865970135984492635162059263522704774021587296434267036118826703220438820021496253479299984545865982019351069422728692448756846769826858225730298675894149230975505728140281569567666410519304227253535387971831426322701787766090806387971258035386882007766016205445657419354481699662019382610148423667137759104289829789923387976330427904378542019388200124075876688340797334530442272970139617349158346625098516662983839263520703952198634539400758249833210972641983251938267983328543269544969348274989098124073482397013898703522195865926357766022099967023368657282163493538696702795182786126703975151301096558917821884318043970136849716205983663879766410595124606995822453044665834686179261975841537207582564746864776602601998268484161568866410162055731018806242996184112407302081484238797948372670318843343442696451042369555348673580353863334113325626843631868497982685316412407529599483744406430673538614447201936435022043387972814061534738802670355522799173321345852478235817986581664103879722421669959483712407275627766635386188437093898332185564915834823188435822515500926353122595272926354915818876994934915885464267038820067244454403538695219983323767656292821402209997472507038596570823636109701328140882008920697013348231726895865982683538653572220434226248082413321167942272445394447626194948372814085428201937401126194924013538649158188432019344472667564530412375485369483745304397844530412407582259527866410870993903165321276799521920865696984227226020468448310464018941132370281712760501484223266188435822597013838634053644266453042086561031422723160938251824892209997012422723171372448555744530469620926352019398332491582086581712948378504632649847349833288200528729655832123370764660057703442661918276143817123879711174596013779894837982689826822099162059397935386815711437021912220434782334823969183466220865633044134995509492154915828863496579601146457786001884337698563802019386235422727472425319130607421817641926352019320865747869483758225477943163912822208653482322099765337766079015943416011372040527585888651776147124598381712665885726935886372369263567183530103779541013124075558194837751722994235386967023466226703636856598942272916979655818843n,
];

const splitChunks = (list, chunkSize) => {
  return list
    .toString()
    .match(new RegExp(`\\d{1,${chunkSize}}`, "g"))
    .map(Number)
    .sort();
};

const splitChunksFirst = splitChunks(list1, 5);

const splitChunksSecond = splitChunks(list2, 5);

const findDistance = (arr1, arr2) => {
  if (arr1.length === arr2.length) {
    return arr2.map((element, index) => element - arr1[index]);
  }
};

const distance = findDistance(splitChunksFirst, splitChunksSecond);

const solution = distance.map(Math.abs).reduce((a, b) => a + b);
